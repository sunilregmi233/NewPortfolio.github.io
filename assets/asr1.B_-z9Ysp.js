import{d as l}from"./index.CcWRHCQW.js";import{k as a,c as o,e as i,f as d,H as h,I as p,t as u,b as n}from"./entry.BtDiBga9.js";import"./_commonjsHelpers.C4iS2aBk.js";const g={name:"ASRStreaming",data(){return{speechStatus:"",transcriptions:null,transcriptionsText:"",myvad:null,recording:!1,recordedSpeech:null,websocket:null,connected:!1}},computed:{displayText(){return this.transcriptionsText||"Loading..."}},methods:{connectWebSocket(){this.websocket||(this.websocket=new WebSocket("ws://localhost:8000/audio"),this.websocket.onopen=()=>{console.log("WebSocket connection established"),this.connected=!0},this.websocket.onmessage=e=>{console.log("Message received:",e.data),this.transcriptionsText+=e.data+" ",console.log(this.transcriptions)},this.websocket.onclose=()=>{console.log("WebSocket connection closed"),this.connected=!1},this.websocket.onerror=e=>{console.error("WebSocket error:",e),this.connected=!1})},async toggleRecording(){this.recording?(this.recording=!1,this.stopRecording()):(this.recording=!0,this.initializeVAD(),this.connectWebSocket())},async initializeVAD(){try{this.speechStatus="listening",this.transcriptions=[],this.recordedSpeech=null,this.myvad=await l.MicVAD.new({onSpeechStart:()=>{this.speechStatus="speechStart"},onSpeechEnd:e=>{console.log("Recorded audio data:",e),this.speechStatus="processing",setTimeout(()=>{this.speechStatus="speechEnd";const t=new Uint8Array(e.buffer);this.websocket&&t!=null?(this.websocket.send(t),console.log("sent wav data")):console.error("WebSocket is not initialized.")},2e3)},workletURL:"https://cdn.jsdelivr.net/npm/@ricky0123/vad-web@0.0.7/dist/vad.worklet.bundle.min.js"}),this.myvad.start()}catch(e){console.error("Error initializing VAD:",e),this.speechStatus="error"}},stopRecording(){this.myvad.stop,this.myvad=null,this.websocket&&(this.websocket.close(),this.websocket=null)},processAudio(e){return this.transcriptions},stopWebSocket(){}}},b={class:"flex flex-col items-center p-4 space-y-4"},k={class:"flex flex-col items-center"},S={class:"mb-4"},f={key:0,class:"text-lg font-bold text-blue-500"},x={key:1,class:"text-lg font-bold text-blue-500"},m={key:2,class:"text-lg font-bold text-green-500"},w={key:3,class:"text-lg font-bold text-green-500"},y={key:4,class:"text-lg font-bold text-red-500"};function _(e,t,v,T,s,c){return n(),o("div",b,[i("div",k,[i("div",S,[s.speechStatus==="listening"?(n(),o("p",f,"Listening...")):s.speechStatus==="processing"?(n(),o("p",x,"Processing...")):s.speechStatus==="speechStart"?(n(),o("p",m,"Speech started")):s.speechStatus==="speechEnd"?(n(),o("p",w,"Speech ended")):s.speechStatus==="error"?(n(),o("p",y,"Error occurred")):d("",!0)]),h(i("textarea",{"onUpdate:modelValue":t[0]||(t[0]=r=>s.transcriptionsText=r),rows:"10",cols:"50",readonly:"",class:"p-2 border border-gray-300 rounded-md resize-none"},null,512),[[p,s.transcriptionsText]])]),i("button",{onClick:t[1]||(t[1]=(...r)=>c.toggleRecording&&c.toggleRecording(...r)),class:"px-4 py-2 bg-blue-500 text-white rounded hover:bg-blue-600"},u(s.recording?"Pause Recording":"Start Recording"),1),i("button",{onClick:t[2]||(t[2]=(...r)=>e.clearTranscriptions&&e.clearTranscriptions(...r)),class:"px-4 py-2 bg-red-500 text-white rounded hover:bg-red-600"}," Clear Text ")])}const D=a(g,[["render",_],["__scopeId","data-v-b48df23a"]]);export{D as default};
